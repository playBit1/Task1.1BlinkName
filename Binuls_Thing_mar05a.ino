#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/4f36b0f6-a3e6-4672-adbe-b03ed311756b 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  bool pushButton;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"


void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  pinMode(LED_BUILTIN, OUTPUT);
  
}

void loop() {
  ArduinoCloud.update();
  recvWithEndMarker();
  
  if (pushButton && newData) {
    Serial.print("Blinking: ");
    Serial.println(receivedChars);
    
    findWord(receivedChars);
    
    newData = false;
    pushButton = false;
    
    }

  
}

void findWord(char* word) {
  for (int i = 0; word[i] != '\0'; i++) {
    char cr = toupper(word[i]);
    
    if (cr >= 'A' && cr <= 'Z') { //letters
      int index = cr - 'A';
      blinkCode(letters[index]);
      delay(800);
      
    } 
    else if (cr == ' ') { //spaces
      delay(1000);
      
    }
    
  }
  Serial.print(word);
  Serial.println(": Blinked!");
}

void blinkCode(char* mCode) {
  for (int i = 0; mCode[i] != '\0'; i++) {
    if (mCode[i] == '.') {
      shortBeep();
    } 
    else if (mCode[i] == '-') {
      longBeep();
    }
  }
}

//From Serial input Basics
void recvWithEndMarker() {
    static byte ndx = 0;
    char endMarker = '\n';
    char rc;
    
    while (Serial.available() > 0 && newData == false) {
        rc = Serial.read();

        if (rc != endMarker) {
            receivedChars[ndx] = rc;
            ndx++;
            if (ndx >= numChars) {
                ndx = numChars - 1;
            }
        }
        else {
            receivedChars[ndx] = '\0'; // terminate the string
            ndx = 0;
            newData = true;
        }
    }
}

/*
  Since PushButton is READ_WRITE variable, onPushButtonChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onPushButtonChange()  {
  // Add your code here to act upon PushButton change
}

void longBeep() {
  digitalWrite(LED_BUILTIN, HIGH);
  delay(600);
  digitalWrite(LED_BUILTIN, LOW);
  delay(150);
}

void shortBeep() {
  digitalWrite(LED_BUILTIN, HIGH);
  delay(300);
  digitalWrite(LED_BUILTIN, LOW);
  delay(150);
}